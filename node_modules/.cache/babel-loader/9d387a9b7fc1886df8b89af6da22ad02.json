{"remainingRequest":"/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js!/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifyCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifyCode.vue","mtime":1646118464908},{"path":"/Users/sanxun/Downloads/cxc_bsc/babel.config.js","mtime":1644982795000},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js","mtime":1644989844828},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js","mtime":1644989857412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyoqCiAqIENvZGUKICogQGRlc2NyaXB0aW9uIOW4uOinhOeahOWbvueJh+aWh+Wtl+ivhuWIq+aIluiAheaVsOWtl+iuoeeulwogKiAqLwppbXBvcnQgeyBfY29kZV9jaGFycywgX2NvZGVfY29sb3IxLCBfY29kZV9jb2xvcjIgfSBmcm9tICcuLi8uLi9saWIvdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmVyaWZ5Q29kZScsCiAgcHJvcHM6IHsKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnMScKICAgIH0sCiAgICAvL+S9jeaVsO+8jOS7heWcqHR5cGU9MuaXtueUn+aViAogICAgZmlndXJlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTAwCiAgICB9LAogICAgLy/nrpfms5XvvIzmlK/mjIHliqDlh4/kuZjvvIww5Li66ZqP5py677yM5LuF5ZyodHlwZT0y5pe255Sf5pWICiAgICBhcml0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcyMDBweCcKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnNjBweCcKICAgIH0sCiAgICBmb250U2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICczMHB4JwogICAgfSwKICAgIGNvZGVMZW5ndGg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA2CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFbmQ6IGZhbHNlLAogICAgICAvLyDovpPlhaXnmoTlgLwKICAgICAgaW5wdXRWYWx1ZTogJycsCiAgICAgIC8vIOminOiJsgogICAgICBjb250YWluZXJCYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJywKICAgICAgY29udGFpbmVyQ29sb3I6ICcjZmZmJywKICAgICAgY29kZUNob3NlOiAnJywKICAgICAgLy8g5bqU6K+l6L6T5YWl55qEY29kZQogICAgICBjb2RlU2hvdzogW10gLy8g5pi+56S655So55qECgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHRoaXMuc2V0Q29kZSgpOwogICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3JlYWR5JywgdGhpcyk7CiAgICB9LAoKICAgIC8qKgogICAgICogc2V0Q29kZQogICAgICogQGRlc2NyaXB0aW9uIOiuvue9rumqjOivgeeggQogICAgICogKi8KICAgIHNldENvZGU6IGZ1bmN0aW9uIHNldENvZGUoKSB7CiAgICAgIGlmICh0aGlzLmlzRW5kID09IGZhbHNlKSB7CiAgICAgICAgdGhpcy5jb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSBfY29kZV9jb2xvcjFbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMyldOwogICAgICAgIHRoaXMuY29udGFpbmVyQ29sb3IgPSBfY29kZV9jb2xvcjJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSldOwogICAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9ICcnOwogICAgICAgIHRoaXMuY29kZVNob3cgPSBbXTsKICAgICAgICB0aGlzLmNvZGVDaG9zZSA9ICcnOwoKICAgICAgICBpZiAodGhpcy50eXBlID09PSAnMScpIHsKICAgICAgICAgIC8v5pmu6YCa6aqM6K+B56CBIOWbvueJh+mAieaLqQogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNvZGVMZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgY2hhck51bSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUyKTsKICAgICAgICAgICAgdmFyIHRtcFN0eWxlID0gY2hhck51bSAlIDIgPT0gMCA/ICJmb250LXN0eWxlOml0YWxpYzttYXJnaW4tcmlnaHQ6IDEwcHgiIDogImZvbnQtd2VpZ2h0OmJvbGRlciI7CiAgICAgICAgICAgIHRtcFN0eWxlICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpID09IDEgPyAiZm9udC13ZWlnaHQ6Ym9sZGVyIiA6ICIiOwogICAgICAgICAgICB0aGlzLmNvZGVDaG9zZSArPSBfY29kZV9jaGFyc1tjaGFyTnVtXTsKICAgICAgICAgICAgdGhpcy5jb2RlU2hvdy5wdXNoKHsKICAgICAgICAgICAgICBzdHlsZTogdG1wU3R5bGUsCiAgICAgICAgICAgICAgY2hhcjogX2NvZGVfY2hhcnNbY2hhck51bV0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT09ICcyJykgewogICAgICAgICAgLy8g566X5rOV6aqM6K+B56CBCiAgICAgICAgICB2YXIgbnVtMSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuZmlndXJlKTsKICAgICAgICAgIHZhciBudW0yID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5maWd1cmUpOwogICAgICAgICAgdmFyIGNvZGVTaG93ID0gJyc7CgogICAgICAgICAgaWYgKHRoaXMuYXJpdGggPT0gMCkgewogICAgICAgICAgICB2YXIgdG1wYXJpdGggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzKTsKICAgICAgICAgIH0KCiAgICAgICAgICBzd2l0Y2ggKHRtcGFyaXRoKSB7CiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICB0aGlzLmNvZGVDaG9zZSA9IHBhcnNlSW50KG51bTEpICsgcGFyc2VJbnQobnVtMik7CiAgICAgICAgICAgICAgY29kZVNob3cgPSBudW0xICsgJyArICcgKyBudW0yICsgJyA9ID8nOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGlmIChwYXJzZUludChudW0xKSA8IHBhcnNlSW50KG51bTIpKSB7CiAgICAgICAgICAgICAgICB2YXIgdG1wbnVtID0gbnVtMTsKICAgICAgICAgICAgICAgIG51bTEgPSBudW0yOwogICAgICAgICAgICAgICAgbnVtMiA9IHRtcG51bTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRoaXMuY29kZUNob3NlID0gcGFyc2VJbnQobnVtMSkgLSBwYXJzZUludChudW0yKTsKICAgICAgICAgICAgICBjb2RlU2hvdyA9IG51bTEgKyAnIC0gJyArIG51bTIgKyAnID0gPyc7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgIHRoaXMuY29kZUNob3NlID0gcGFyc2VJbnQobnVtMSkgKiBwYXJzZUludChudW0yKTsKICAgICAgICAgICAgICBjb2RlU2hvdyA9IG51bTEgKyAnIMOXICcgKyBudW0yICsgJyA9ID8nOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuY29kZVNob3cgPSBjb2RlU2hvdy5zcGxpdCgnJyk7IC8vIOi9rOaVsOe7hAogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIGNoZWNrQ29kZQogICAgICogQGRlc2NyaXB0aW9uIOmqjOivgemqjOivgeeggQogICAgICogKi8KICAgIGNoZWNrQ29kZTogZnVuY3Rpb24gY2hlY2tDb2RlKCkgewogICAgICB2YXIgaW5wdXRWYWx1ZTsKICAgICAgdmFyIGNvZGVDaG9zZTsKCiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICcxJykgewogICAgICAgIC8v5pmu6YCa6aqM6K+B56CBCiAgICAgICAgaW5wdXRWYWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZS50b1VwcGVyQ2FzZSgpOwogICAgICAgIGNvZGVDaG9zZSA9IHRoaXMuY29kZUNob3NlLnRvVXBwZXJDYXNlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaW5wdXRWYWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZTsKICAgICAgICBjb2RlQ2hvc2UgPSB0aGlzLmNvZGVDaG9zZTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coaW5wdXRWYWx1ZSk7CiAgICAgIGNvbnNvbGUubG9nKGNvZGVDaG9zZSk7CiAgICAgIGNvbnNvbGUubG9nKGlucHV0VmFsdWUgPT0gY29kZUNob3NlKTsKCiAgICAgIGlmIChpbnB1dFZhbHVlID09IGNvZGVDaG9zZSkgewogICAgICAgIHRoaXMuaXNFbmQgPSB0cnVlOwogICAgICAgIHRoaXMuJHBhcmVudC4kZW1pdCgnc3VjY2VzcycsIHRoaXMpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHBhcmVudC4kZW1pdCgnZXJyb3InLCB0aGlzKTsKICAgICAgICB0aGlzLnNldENvZGUoKTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIHJlZnJlc2gKICAgICAqIEBkZXNjcmlwdGlvbiDliLfmlrAKICAgICAqICovCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB0aGlzLmlzRW5kID0gZmFsc2U7CiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9ICcnOwogICAgICB0aGlzLnNldENvZGUoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvLyB0eXBl5Y+Y5YyW5YiZ5YWo6Z2i5Yi35pawCiAgICB0eXBlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmluaXQoKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIOemgeatouaLluaLvQogICAgdGhpcy4kZWwub25zZWxlY3RzdGFydCA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfTsKICB9LAogIGkxOG46IHsKICAgIG1lc3NhZ2VzOiB7CiAgICAgICdlbi1VUyc6IHt9LAogICAgICAnemgtQ04nOiB7fQogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AAEA;AACAA,oBADA;AAEAC;AACAC;AACAA,kBADA;AAEAC;AAFA,KADA;AAKA;AACAC;AACAF,kBADA;AAEAC;AAFA,KANA;AAUA;AACAE;AACAH,kBADA;AAEAC;AAFA,KAXA;AAeAG;AACAJ,kBADA;AAEAC;AAFA,KAfA;AAmBAI;AACAL,kBADA;AAEAC;AAFA,KAnBA;AAuBAK;AACAN,kBADA;AAEAC;AAFA,KAvBA;AA2BAM;AACAP,kBADA;AAEAC;AAFA;AA3BA,GAFA;AAkCAO,MAlCA,kBAkCA;AACA;AACAC,kBADA;AAEA;AACAC,oBAHA;AAIA;AACAC,sCALA;AAMAC,4BANA;AAQAC,mBARA;AAQA;AACAC,kBATA,CASA;;AATA;AAWA,GA9CA;AA+CAC;AACAC,QADA,kBACA;AACA;AAEA;AACA,KALA;;AAOA;AACA;AACA;AACA;AACAC,WAXA,qBAWA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACAC;AAEA;AACA;AACAC,6BADA;AAEAC;AAFA;AAIA;AACA,SAZA,MAYA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACAN;AACA;;AACA;AACA;AACA;AACAO;AACAC;AACA;;AACA;AACAR;AACA;;AACA;AACA;AACAA;AACA;AAjBA;;AAoBA,6CA/BA,CA+BA;AACA;AACA;AACA,KApEA;;AAqEA;AACA;AACA;AACA;AACAS,aAzEA,uBAyEA;AACA;AACA;;AACA;AAAA;AACAb;AACAG;AACA,OAHA,MAGA;AACAH;AACAG;AACA;;AAEAW;AACAA;AACAA;;AAEA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KA/FA;;AAgGA;AACA;AACA;AACA;AACAC,WApGA,qBAoGA;AACA;AACA;AACA;AACA;AAxGA,GA/CA;AAyJAC;AACA;AACA1B;AACA2B,qBADA;AAEAC,aAFA,qBAEA;AACA;AACA;AAJA;AAFA,GAzJA;AAkKAC,SAlKA,qBAkKA;AACA;AACA;AACA;AACA,KAFA;AAGA,GAvKA;AAwKAC;AACAC;AACA,iBADA;AAEA;AAFA;AADA;AAxKA","names":["name","props","type","default","figure","arith","width","height","fontSize","codeLength","data","isEnd","inputValue","containerBackgroundColor","containerColor","codeChose","codeShow","methods","init","setCode","tmpStyle","style","char","num1","num2","checkCode","console","refresh","watch","immediate","handler","mounted","i18n","messages"],"sourceRoot":"node_modules/vue2-verify/src/components/Verify","sources":["VerifyCode.vue"],"sourcesContent":["<template>\n    <div class=\"cerify-code-panel\">\n        <div class=\"verify-code\"\n             @click=\"setCode\"\n             :style=\"{\n                    'width': width,\n                    'height': height,\n                    'line-height': height,\n                    'font-size': fontSize,\n                    'background-color': containerBackgroundColor,\n                    'color': containerColor\n                }\">\n            <!-- 显示字符串 -->\n            <span :style=\"code.style\" v-for=\"code in codeShow\">\n                {{code.char || code}}\n            </span>\n        </div>\n        <div class=\"verify-code-area\" :style=\"{'width': width}\">\n            <div class=\"verify-input-area\">\n                <input type=\"text\" v-model=\"inputValue\" class=\"varify-input-code\"/>\n            </div>\n            <div class=\"verify-change-area\" @click=\"setCode\"><a class=\"verify-change-code\">换一张</a></div>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * Code\n     * @description 常规的图片文字识别或者数字计算\n     * */\n    import {_code_chars, _code_color1, _code_color2} from '../../lib/util'\n\n    export default {\n        name: 'VerifyCode',\n        props: {\n            type: {\n                type: String,\n                default: '1'\n            },\n            //位数，仅在type=2时生效\n            figure: {\n                type: Number,\n                default: 100\n            },\n            //算法，支持加减乘，0为随机，仅在type=2时生效\n            arith: {\n                type: Number,\n                default: 0\n            },\n            width: {\n                type: String,\n                default: '200px'\n            },\n            height: {\n                type: String,\n                default: '60px'\n            },\n            fontSize: {\n                type: String,\n                default: '30px'\n            },\n            codeLength: {\n                type: Number,\n                default: 6\n            }\n        },\n        data() {\n            return {\n                isEnd: false,\n                // 输入的值\n                inputValue: '',\n                // 颜色\n                containerBackgroundColor: '#fff',\n                containerColor: '#fff',\n\n                codeChose: '', // 应该输入的code\n                codeShow: [] // 显示用的\n            }\n        },\n        methods: {\n            init() {\n                this.setCode()\n\n                this.$parent.$emit('ready', this)\n            },\n\n            /**\n             * setCode\n             * @description 设置验证码\n             * */\n            setCode() {\n                if (this.isEnd == false) {\n\n                    this.containerBackgroundColor = _code_color1[Math.floor(Math.random() * 3)]\n                    this.containerColor = _code_color2[Math.floor(Math.random() * 5)]\n\n                    this.inputValue = ''\n\n                    this.codeShow = []\n                    this.codeChose = ''\n\n                    if (this.type === '1') {\t\t//普通验证码 图片选择\n                        for (var i = 0; i < this.codeLength; i++) {\n                            var charNum = Math.floor(Math.random() * 52)\n                            var tmpStyle = (charNum % 2 == 0) ? \"font-style:italic;margin-right: 10px\" : \"font-weight:bolder\"\n                            tmpStyle += (Math.floor(Math.random() * 2) == 1) ? \"font-weight:bolder\" : \"\"\n\n                            this.codeChose += _code_chars[charNum]\n                            this.codeShow.push({\n                                style: tmpStyle,\n                                char: _code_chars[charNum]\n                            })\n                        }\n                    } else if (this.type === '2') {\n                        // 算法验证码\n                        var num1 = Math.floor(Math.random() * this.figure)\n                        var num2 = Math.floor(Math.random() * this.figure)\n\n                        let codeShow = ''\n\n                        if (this.arith == 0) {\n                            var tmparith = Math.floor(Math.random() * 3)\n                        }\n\n                        switch (tmparith) {\n                            case 1 :\n                                this.codeChose = parseInt(num1) + parseInt(num2)\n                                codeShow = num1 + ' + ' + num2 + ' = ?'\n                                break\n                            case 2 :\n                                if (parseInt(num1) < parseInt(num2)) {\n                                    var tmpnum = num1\n                                    num1 = num2\n                                    num2 = tmpnum\n                                }\n                                this.codeChose = parseInt(num1) - parseInt(num2)\n                                codeShow = num1 + ' - ' + num2 + ' = ?'\n                                break\n                            default :\n                                this.codeChose = parseInt(num1) * parseInt(num2)\n                                codeShow = num1 + ' × ' + num2 + ' = ?'\n                                break\n                        }\n\n                        this.codeShow = codeShow.split('') // 转数组\n                    }\n                }\n            },\n            /**\n             * checkCode\n             * @description 验证验证码\n             * */\n            checkCode() {\n                let inputValue\n                let codeChose\n                if (this.type === '1') {\t\t//普通验证码\n                    inputValue = this.inputValue.toUpperCase()\n                    codeChose = this.codeChose.toUpperCase()\n                } else {\n                    inputValue = this.inputValue\n                    codeChose = this.codeChose\n                }\n\n                console.log(inputValue)\n                console.log(codeChose)\n                console.log(inputValue == codeChose)\n\n                if (inputValue == codeChose) {\n                    this.isEnd = true\n                    this.$parent.$emit('success', this)\n                } else {\n                    this.$parent.$emit('error', this)\n                    this.setCode()\n                }\n            },\n            /**\n             * refresh\n             * @description 刷新\n             * */\n            refresh() {\n                this.isEnd = false\n                this.inputValue = ''\n                this.setCode()\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>"]}]}