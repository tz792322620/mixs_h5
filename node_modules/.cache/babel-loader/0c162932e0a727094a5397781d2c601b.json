{"remainingRequest":"/Users/sanxun/Downloads/cxc_bsc/node_modules/thread-loader/dist/cjs.js!/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js!/Users/sanxun/Downloads/cxc_bsc/node_modules/eslint-loader/index.js??ref--14-0!/Users/sanxun/Downloads/cxc_bsc/src/utils/Mapping.js","dependencies":[{"path":"/Users/sanxun/Downloads/cxc_bsc/src/utils/Mapping.js","mtime":1645238988348},{"path":"/Users/sanxun/Downloads/cxc_bsc/babel.config.js","mtime":1644982795000},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/thread-loader/dist/cjs.js","mtime":1644989844777},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js","mtime":1644989844828},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/eslint-loader/index.js","mtime":1644989854412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sanxun/Downloads/cxc_bsc/src/utils/Mapping.js"],"names":["Web3","Bridge_abi","Addrsmapping","address","contract","initContracts","refContract","methods","addrs","call","Error","eggCodes","codes","eggFee","fee","Mapping","egg_address","amount","value","mapAddress","send","from","result","eggAddr","eggWallet","egg","eggW","web3","window","ethereum","eth","Contract"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\nimport Bridge_abi from '../utils/json/Bridge.json'\n//查询地址是否被映射\n\n//查询地址是否被映射\nexport const Addrsmapping = async (address) => {\n    try {\n        const contract = initContracts().refContract.methods.addrs(address).call()\n        return contract;\n    } catch (error) {\n        throw new Error(error);\n    }\n}\n\n\n//查询随机码\nexport const eggCodes = async (address) => {\n    try {\n        const eggCodes = initContracts().refContract.methods.codes(address).call()\n        return eggCodes;\n    } catch (error) {\n        throw new Error(error);\n    }\n}\n\n//查询映射费用\nexport const eggFee = async () => {\n    try {\n        const contract = initContracts().refContract.methods.fee().call()\n        return contract;\n    } catch (error) {\n        throw new Error(error);\n    }\n}\n\n\n//地址映射\nexport const Mapping = async (address, egg_address,amount) => {\n    try {\n        const contract = initContracts().refContract.methods\n         const value = amount\n        const result = await contract.mapAddress(egg_address).send({from: address,value:value})\n        return result;\n    } catch (error) {\n\n        throw new Error(error);\n    }\n}\n// 查询egg地址是否已经被绑定\nexport const eggAddr = async (egg_address) => {\n    try {\n        const contract = initContracts().refContract.methods\n        const result = await contract.eggAddr(egg_address).call()\n        return result;\n\n    } catch (error) {\n\n        throw new Error(error);\n    }\n}\n// 查询EGG指定钱包地址\nexport const eggWallet = async () => {\n    try {\n        const contract = initContracts().refContract.methods\n        const eggW = await contract.egg().call()\n        return eggW;\n    } catch (error) {\n\n        throw new Error(error);\n    }\n}\n\n\nexport const initContracts = () => {\n    let web3 = new Web3(window.ethereum)\n    return {\n        web3,\n        // refContract: new web3.eth.Contract(Bridge_abi, '0xD2CF3893157ec8220784B60F044caFeF9451c42C'),\n        // refContract: new web3.eth.Contract(Bridge_abi, '0x7DB9D27Fd664C0DFA2d23Fb76487F589E7DB90dA'),\n        refContract: new web3.eth.Contract(Bridge_abi, '0x159879E0Ff27D7022fb6df6cA78ABA5B34271552'),\n\n    }\n}\n"]}]}