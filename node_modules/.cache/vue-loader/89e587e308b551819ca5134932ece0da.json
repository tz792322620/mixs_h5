{"remainingRequest":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifyPoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifyPoints.vue","mtime":1646118464909},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js","mtime":1644989844828},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js","mtime":1644989857412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifyPoints.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"VerifyPoints.vue","sourceRoot":"node_modules/vue2-verify/src/components/Verify","sourcesContent":["<template>\n    <div style=\"position: relative\"\n         @mouseover=\"mode === 'pop'?(showImage = true):undefined\"\n         @mouseout=\"mode === 'pop'?(showImage = false):undefined\">\n        <div class=\"verify-img-out\"\n             v-show=\"showImage\"\n             @mouseover=\"mode === 'pop'?(showImage = true):undefined\"\n             @mouseout=\"mode === 'pop'?(showImage = false):undefined\"\n             :style=\"mode === 'pop' ?\n                                {display: 'none', position: 'absolute', bottom: '42px', height: parseInt(setSize.imgHeight) + vSpace + 'px'} :\n                                {position: 'relative', height: parseInt(setSize.imgHeight) + vSpace + 'px'}\">\n            <div class=\"verify-img-panel\" :style=\"{'width': setSize.imgWidth,\n                                                   'height': setSize.imgHeight,\n                                                   'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight,\n                                                   'margin-bottom': vSpace + 'px'}\">\n                <div class=\"verify-refresh\" style=\"z-index:3\" @click=\"refresh\" v-show=\"showRefresh\">\n                    <i class=\"iconfont icon-refresh\"></i>\n                </div>\n                <canvas :width=\"setSize.imgWidth\" :height=\"setSize.imgHeight\"\n                        ref=\"canvas\"\n                        @click=\"bindingClick?canvasClick($event):undefined\"></canvas>\n                <div v-for=\"(tempPoint, index) in tempPoints\" :key=\"index\" class=\"point-area\"\n                     :style=\"{\n                        'background-color':'#1abd6c',\n                        color:'#fff',\n                        'z-index':9999,\n                        width:'30px',\n                        height:'30px',\n                        'text-align':'center',\n                        'line-height':'30px',\n                        'border-radius': '50%',\n                        position:'absolute',\n                        top:parseInt(tempPoint.y-10) + 'px',\n                        left:parseInt(tempPoint.x-10) + 'px'\n                     }\">\n                    {{index + 1}}\n                </div>\n            </div>\n        </div>\n        <div class=\"verify-bar-area\"\n             :style=\"{'width': this.barSize.width,\n                      'height': this.barSize.height,\n                      'color': this.barAreaColor,\n                      'border-color': this.barAreaBorderColor,\n                      'line-height':this.barSize.height}\">\n            <span class=\"verify-msg\">{{text}}</span>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * VerifyPoints\n     * @description 点选\n     * */\n\n    import {resetSize, _code_chars, _code_color1, _code_color2} from '../../lib/util'\n\n    function getOffset(Node, offset = {top: 0, left: 0}) {\n        if (Node == document.body) {//当该节点为body节点时，结束递归\n            return offset;\n        }\n\n        offset.top += Node.offsetTop;\n        offset.left += Node.offsetLeft;\n\n        return getOffset(Node.parentNode, offset);//向上累加offset里的值\n    }\n\n    export default {\n        name: 'VerifyPoints',\n        props: {\n            //弹出式pop，固定fixed\n            mode: {\n                type: String,\n                default: 'fixed'\n            },\n            //默认的文字数量\n            defaultNum: {\n                type: Number,\n                default: 4\n            },\n            //校对的文字数量\n            checkNum: {\n                type: Number,\n                default: 3\n            },\n            //间隔\n            vSpace: {\n                type: Number,\n                default: 5\n            },\n            imgUrl: {\n                type: String,\n                default: 'http://via.placeholder.com/'\n            },\n            imgName: {\n                type: Array,\n                default() {\n                    return ['350x150', '350x450']\n                }\n            },\n            imgSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '200px'\n                    }\n                }\n            },\n            barSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '40px'\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                fontPos: [], // 选中的坐标信息\n                checkPosArr: [], //用户点击的坐标\n                num: 1,//点击的记数\n                imgRand: 0, // //随机的背景图片\n                setSize: {\n                    imgHeight: 0,\n                    imgWidth: 0,\n                    barHeight: 0,\n                    barWidth: 0\n                },\n                showImage: true,\n                tempPoints: [],\n                text: '',\n                barAreaColor: undefined,\n                barAreaBorderColor: undefined,\n                showRefresh: true,\n                bindingClick: true\n            }\n        },\n        computed: {\n            resetSize() {\n                return resetSize\n            }\n        },\n        methods: {\n            init() {\n                //加载页面\n                this.fontPos.splice(0, this.fontPos.length)\n                this.checkPosArr.splice(0, this.checkPosArr.length)\n                this.num = 1\n                this.imgRand = Math.floor(Math.random() * this.imgName.length)\n\n                this.$nextTick(() => {\n                    this.setSize = this.resetSize(this)\t//重新设置宽度高度\n                    this.refresh();\n                    this.$parent.$emit('ready', this)\n                })\n\n            },\n            canvasClick(e) {\n                this.checkPosArr.push(this.getMousePos(this.$refs.canvas, e));\n                if (this.num == this.checkNum) {\n\n                    this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n                    setTimeout(() => {\n                        var flag = this.comparePos(this.fontPos, this.checkPosArr);\n                        if (flag == false) {\t//验证失败\n                            this.$parent.$emit('error', this)\n                            this.barAreaColor = '#d9534f'\n                            this.barAreaBorderColor = '#d9534f'\n                            this.text = '验证失败'\n\n                            setTimeout(() => {\n                                this.refresh();\n                            }, 400);\n\n                        } else {\t//验证成功\n                            this.barAreaColor = '#4cae4c'\n                            this.barAreaBorderColor = '#5cb85c'\n                            this.text = '验证成功'\n                            this.showRefresh = false\n                            this.bindingClick = false\n                            this.$parent.$emit('success', this)\n                        }\n                    }, 400);\n\n                }\n\n                if (this.num < this.checkNum) {\n                    this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n                }\n\n            },\n            //绘制合成的图片\n            drawImg: function (obj, img) {\n                //准备canvas环境\n                var canvas = this.$refs.canvas;\n                var ctx = canvas.getContext(\"2d\");\n\n                // 绘制图片\n                ctx.drawImage(img, 0, 0, parseInt(this.setSize.imgWidth), parseInt(this.setSize.imgHeight));\n\n                // 绘制水印\n                var fontSizeArr = ['italic small-caps bold 20px microsoft yahei', 'small-caps normal 25px arial', '34px microsoft yahei'];\n                var fontStr = '天地玄黄宇宙洪荒日月盈昃辰宿列张寒来暑往秋收冬藏闰余成岁律吕调阳云腾致雨露结为霜金生丽水玉出昆冈剑号巨阙珠称夜光果珍李柰菜重芥姜海咸河淡鳞潜羽翔龙师火帝鸟官人皇始制文字乃服衣裳推位让国有虞陶唐吊民伐罪周发殷汤坐朝问道垂拱平章爱育黎首臣伏戎羌遐迩体率宾归王';\t//不重复的汉字\n\n\n                var fontChars = [];\n\n                var avg = Math.floor(parseInt(this.setSize.imgWidth) / (parseInt(this.defaultNum) + 1));\n                var tmp_index = '';\n                var color2Num = Math.floor(Math.random() * 5);\n\n                for (var i = 1; i <= this.defaultNum; i++) {\n\n                    fontChars[i - 1] = this.getChars(fontStr, fontChars);\n\n                    tmp_index = Math.floor(Math.random() * 3);\n                    ctx.font = fontSizeArr[tmp_index];\n                    ctx.fillStyle = _code_color2[color2Num];\n\n                    if (Math.floor(Math.random() * 2) == 1) {\n                        var tmp_y = Math.floor(parseInt(this.setSize.imgHeight) / 2) + tmp_index * 20 + 20\n                    } else {\n                        var tmp_y = Math.floor(parseInt(this.setSize.imgHeight) / 2) - tmp_index * 20\n                    }\n\n                    ctx.fillText(fontChars[i - 1], avg * i, tmp_y);\n                    this.fontPos[i - 1] = {'char': fontChars[i - 1], 'x': avg * i, 'y': tmp_y}\n                }\n\n                for (var i = 0; i < (this.defaultNum - this.checkNum); i++) {\n                    this.shuffle(this.fontPos).pop();\n                }\n\n                var msgStr = '';\n                for (var i = 0; i < this.fontPos.length; i++) {\n                    msgStr += this.fontPos[i].char + ',';\n                }\n\n                this.text = '请顺序点击【' + msgStr.substring(0, msgStr.length - 1) + '】'\n\n                return this.fontPos;\n            },\n            //获取坐标\n            getMousePos: function (obj, e) {\n                var x = e.offsetX - 5\n                var y = e.offsetY - 5\n\n                return {x, y}\n            },\n            //递归去重\n            getChars: function (fontStr, fontChars) {\n\n                var tmp_rand = parseInt(Math.floor(Math.random() * fontStr.length));\n                if (tmp_rand > 0) {\n                    tmp_rand = tmp_rand - 1;\n                }\n\n                var tmp_char = fontStr.charAt(tmp_rand);\n                if (fontChars.indexOf(tmp_char) == -1) {\n                    return tmp_char;\n                } else {\n                    return this.getChars(fontStr, fontChars);\n                }\n            },\n            //洗牌数组\n            shuffle: function (arr) {\n                var m = arr.length, i;\n                var tmpF;\n                while (m) {\n                    i = (Math.random() * m--) >>> 0;\n                    tmpF = arr[m];\n                    arr[m] = arr[i];\n                    arr[i] = tmpF;\n                    //[arr[m], arr[i]] = [arr[i], arr[m]];\t//低版本浏览器不支持此写法\n                }\n                return arr;\n            },\n            //创建坐标点\n            createPoint: function (pos) {\n                this.tempPoints.push(Object.assign({}, pos))\n                return ++this.num;\n            },\n            comparePos: function (fontPos, checkPosArr) {\n                var flag = true;\n                for (var i = 0; i < fontPos.length; i++) {\n                    if (!(parseInt(checkPosArr[i].x) + 40 > fontPos[i].x && parseInt(checkPosArr[i].x) - 40 < fontPos[i].x && parseInt(checkPosArr[i].y) + 40 > fontPos[i].y && parseInt(checkPosArr[i].y) - 40 < fontPos[i].y)) {\n                        flag = false;\n                        break;\n                    }\n                }\n\n                return flag;\n            },\n            refresh: function () {\n                this.tempPoints.splice(0, this.tempPoints.length)\n                this.barAreaColor = '#000'\n                this.barAreaBorderColor = '#ddd'\n                this.bindingClick = true\n\n                this.fontPos.splice(0, this.fontPos.length)\n                this.checkPosArr.splice(0, this.checkPosArr.length)\n                this.num = 1\n\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n                var img = new Image();\n                img.src = this.imgUrl + this.imgName[this.imgRand];\n                // 加载完成开始绘制\n                var _this = this\n                img.onload = function (e) {\n                    _this.$nextTick(() => {\n                        _this.fontPos = _this.drawImg(_this.$el, this)\n                    })\n                }\n\n                this.text = '验证失败'\n                this.showRefresh = true\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>"]}]}