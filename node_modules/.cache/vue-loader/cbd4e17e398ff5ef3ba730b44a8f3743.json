{"remainingRequest":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifySlide.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue2-verify/src/components/Verify/VerifySlide.vue","mtime":1646118464909},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/babel-loader/lib/index.js","mtime":1644989844828},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/cache-loader/dist/cjs.js","mtime":1644989844798},{"path":"/Users/sanxun/Downloads/cxc_bsc/node_modules/vue-loader/lib/index.js","mtime":1644989857412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifySlide.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"VerifySlide.vue","sourceRoot":"node_modules/vue2-verify/src/components/Verify","sourcesContent":["<template>\n    <div style=\"position: relative;\"\n         @mouseover=\"showImage = true\"\n         @mouseout=\"showImage = true\">\n        <!-- puzzle的情况 -->\n        <div v-if=\"type === '2'\" class=\"verify-img-out\"\n             v-show=\"showImage\"\n             @mouseover=\"showImage = true\"\n             @mouseout=\"showImage = true\"\n             :style=\"{display: mode === 'pop'?'none':undefined,\n                      position: mode === 'pop'?'absolute':'relative',\n                      height: (parseInt(setSize.imgHeight) + vSpace) + 'px',\n                      bottom: mode ==='pop'?'42px':undefined}\">\n            <div class=\"verify-img-panel\" :style=\"{width: setSize.imgWidth,\n                                                   height: setSize.imgHeight,\n                                                   background: 'url(' + imgUrl + imgName[imgRand]+')',\n                                                   'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight}\">\n                <div class=\"verify-refresh\" @click=\"refresh\" v-show=\"showRefresh\"><i class=\"iconfont icon-refresh\"></i>\n                </div>\n                <div class=\"verify-gap\"\n                     :style=\"{'width': blockSize.width, 'height': blockSize.height, top: top + 'px', left: left + 'px'}\"></div>\n            </div>\n        </div>\n\n        <!-- 公共部分 -->\n        <div class=\"verify-bar-area\" :style=\"{width: setSize.barWidth,\n                                              height: barSize.height,\n                                              'line-height':barSize.height}\">\n            <span class=\"verify-msg\" v-text=\"text\"></span>\n            <div class=\"verify-left-bar\"\n                 :style=\"{width: (leftBarWidth!==undefined)?leftBarWidth: barSize.height, height: barSize.height, 'border-color': leftBarBorderColor, transaction: transitionWidth}\">\n                <span class=\"verify-msg\" v-text=\"finishText\"></span>\n                <div class=\"verify-move-block\"\n                     @touchstart=\"start\"\n                     @mousedown=\"start\"\n                     :style=\"{width: barSize.height, height: barSize.height, 'background-color': moveBlockBackgroundColor, left: moveBlockLeft, transition: transitionLeft}\">\n                    <i :class=\"['verify-icon iconfont', iconClass]\"\n                       :style=\"{color: iconColor}\"></i>\n                    <div v-if=\"type === '2'\"\n                         class=\"verify-sub-block\"\n                         :style=\"{'width': blockSize.width,\n                                  'height': blockSize.height,\n                                  'top': '-' + (parseInt(setSize.imgHeight) - top + vSpace) + 'px',\n                                  'background-image': 'url(' + imgUrl + imgName[this.imgRand] + ')',\n                                  'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\n                                  'background-position-y': '-' + top + 'px',\n                                  'background-position-x': '-' + left + 'px'}\"\n                         v-show=\"mode !== 'pop' && showImage\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * VerifySlide\n     * @description 滑块\n     * */\n    import {resetSize} from '../../lib/util'\n\n    export default {\n        name: 'VerifySlide',\n        props: {\n            type: {\n                type: String,\n                default: '1'\n            },\n            //弹出式pop，固定fixed\n            mode: {\n                type: String,\n                default: 'fixed'\n            },\n            vOffset: {\n                type: Number,\n                default: 5\n            },\n            vSpace: {\n                type: Number,\n                default: 5\n            },\n            explain: {\n                type: String,\n                default: '向右滑动完成验证'\n            },\n            imgUrl: {\n                type: String,\n                default: 'http://via.placeholder.com/'\n            },\n            imgName: {\n                type: Array,\n                default() {\n                    return ['350x150', '350x450']\n                }\n            },\n            imgSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '200px'\n                    }\n                }\n            },\n            blockSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '50px',\n                        height: '50px'\n                    }\n                }\n            },\n            barSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '40px'\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                imgRand: 0,\n                text: '',\n                finishText:'',\n                setSize: {\n                    imgHeight: 0,\n                    imgWidth: 0,\n                    barHeight: 0,\n                    barWidth: 0\n                },\n                top: 0,\n                left: 0,\n                showImage: true,\n                moveBlockLeft: undefined,\n                leftBarWidth: undefined,\n                // 移动中样式\n                moveBlockBackgroundColor: undefined,\n                leftBarBorderColor: '#ddd',\n                iconColor: undefined,\n                iconClass: 'icon-right',\n                status: false,\t//鼠标状态\n                isEnd: false,\t\t//是够验证完成\n                showRefresh: true,\n                transitionLeft: '',\n                transitionWidth: ''\n            }\n        },\n        computed: {\n            barArea() {\n                return this.$el.querySelector('.verify-bar-area')\n            },\n            resetSize() {\n                return resetSize\n            }\n        },\n        methods: {\n            init() {\n                this.text = this.explain\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n\n                this.$nextTick(() => {\n                    let setSize = this.resetSize(this)\t//重新设置宽度高度\n                    // 监听的问题\n                    for (let key in setSize) {\n                        this.$set(this.setSize, key, setSize[key])\n                    }\n\n                    this.randSet()\n\n                    this.$parent.$emit('ready', this)\n                })\n\n                var _this = this\n\n                window.removeEventListener(\"touchmove\", function (e) {\n                    _this.move(e);\n                });\n                window.removeEventListener(\"mousemove\", function (e) {\n                    _this.move(e);\n                });\n\n                //鼠标松开\n                window.removeEventListener(\"touchend\", function () {\n                    _this.end();\n                });\n                window.removeEventListener(\"mouseup\", function () {\n                    _this.end();\n                });\n\n                window.addEventListener(\"touchmove\", function (e) {\n                    _this.move(e);\n                });\n                window.addEventListener(\"mousemove\", function (e) {\n                    _this.move(e);\n                });\n\n                //鼠标松开\n                window.addEventListener(\"touchend\", function () {\n                    _this.end();\n                });\n                window.addEventListener(\"mouseup\", function () {\n                    _this.end();\n                });\n\n            },\n\n            //鼠标按下\n            start: function (e) {\n                if (this.isEnd == false) {\n                    this.text = ''\n                    this.moveBlockBackgroundColor = '#337ab7'\n                    this.leftBarBorderColor = '#337AB7'\n                    this.iconColor = '#fff'\n                    e.stopPropagation();\n                    this.status = true;\n                }\n            },\n            //鼠标移动\n            move: function (e) {\n                if (this.status && this.isEnd == false) {\n//                    if (this.mode == 'pop') {\n//                        this.showImage = true\n//                    }\n\n                    if (!e.touches) {    //兼容移动端\n                        var x = e.clientX;\n                    } else {     //兼容PC端\n                        var x = e.touches[0].pageX;\n                    }\n                    var bar_area_left = this.getLeft(this.barArea);\n                    var move_block_left = x - bar_area_left //小方块相对于父元素的left值\n\n                    if (this.type !== '1') {\t\t//图片滑动\n                        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2) {\n                            move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2;\n                        }\n\n                    } else {\t\t//普通滑动\n                        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.barSize.height) / 2) + 3) {\n                            this.finishText = '松开验证'\n                            move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.barSize.height) / 2) + 3;\n                        } else {\n                            this.finishText = ''\n                        }\n                    }\n\n                    if (move_block_left <= 0) {\n                        move_block_left = parseInt(parseInt(this.blockSize.width) / 2);\n                    }\n\n                    //拖动后小方块的left值\n                    this.moveBlockLeft = (move_block_left - parseInt(parseInt(this.blockSize.width) / 2) ) + \"px\"\n                    this.leftBarWidth = (move_block_left - parseInt(parseInt(this.blockSize.width) / 2)) + \"px\"\n                }\n            },\n\n            //鼠标松开\n            end: function () {\n                var _this = this;\n\n//                判断是否重合\n                if (this.status && this.isEnd == false) {\n\n                    if (this.type !== '1') {\t\t//图片滑动\n\n                        var vOffset = parseInt(this.vOffset)\n                        if (parseInt(this.left) >= (parseInt((this.moveBlockLeft || '').replace('px', '')) - vOffset) &&\n                            parseInt(this.left) <= (parseInt((this.moveBlockLeft || '').replace('px', '')) + vOffset)) {\n                            this.moveBlockBackgroundColor = '#5cb85c'\n//                            this.htmlDoms.left_bar.css({'border-color': '#5cb85c', 'background-color': '#fff'});\n                            this.leftBarBorderColor = '#5cb85c'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-check'\n                            this.showRefresh = false\n                            this.isEnd = true;\n                            this.$parent.$emit('success', this)\n\n                        } else {\n                            this.moveBlockBackgroundColor = '#d9534f'\n                            this.leftBarBorderColor = '#d9534f'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-close'\n\n\n                            setTimeout(function () {\n                                _this.refresh();\n                            }, 400);\n\n                            this.$parent.$emit('error', this)\n                        }\n\n                    } else {\t\t//普通滑动\n\n                        if (parseInt((this.moveBlockLeft || '').replace('px', '')) >= (parseInt(this.setSize.barWidth) - parseInt(this.barSize.height) - parseInt(this.vOffset))) {\n                            this.moveBlockBackgroundColor = '#5cb85c'\n//                            this.htmlDoms.left_bar.css({\n//                                'color': '#4cae4c',\n//                                'border-color': '#5cb85c',\n//                                'background-color': '#fff'\n//                            });\n                            this.leftBarBorderColor = '#5cb85c'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-check'\n                            this.showRefresh = false\n                            this.finishText = '验证成功'\n                            this.isEnd = true;\n                            this.$parent.$emit('success', this)\n                        } else {\n                            this.finishText = ''\n                            this.moveBlockBackgroundColor = '#d9534f'\n                            this.leftBarBorderColor = '#d9534f'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-close'\n                            this.isEnd = true;\n\n                            setTimeout(function () {\n                                _this.finishText = ''\n                                _this.refresh()\n                                _this.isEnd = false\n                            }, 400);\n\n                            this.$parent.$emit('error', this)\n                        }\n                    }\n\n                    this.status = false;\n                }\n            },\n\n            //随机出生点位\n            randSet: function () {\n                var rand1 = Math.floor(Math.random() * 9 + 1);\n                var rand2 = Math.floor(Math.random() * 9 + 1);\n                var top = rand1 * parseInt(this.setSize.imgHeight) / 15 + parseInt(this.setSize.imgHeight) * 0.1;\n                var left = rand2 * parseInt(this.setSize.imgWidth) / 15 + parseInt(this.setSize.imgWidth) * 0.1;\n\n                this.top = top\n                this.left = left\n            },\n\n            refresh: function () {\n                this.showRefresh = true\n                this.finishText = ''\n\n                this.transitionLeft = 'left .3s'\n                this.moveBlockLeft = 0\n\n                this.leftBarWidth = undefined\n                this.transitionWidth = 'width .3s'\n\n                this.leftBarBorderColor = '#ddd'\n                this.moveBlockBackgroundColor = '#fff'\n                this.iconColor = '#000'\n                this.iconClass = 'icon-right'\n\n                this.randSet()\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n\n                // @todo 检查重启\n//                this.$element.find('.verify-img-panel').css({'background': 'url('+ this.options.imgUrl +this.options.imgName[this.img_rand]+')', 'background-size': this.setSize.img_width + ' '+ this.setSize.img_height});\n//                this.$element.find('.verify-sub-block').css({'background-image': 'url('+ this.options.imgUrl +this.options.imgName[this.img_rand]+')', 'background-size': this.setSize.img_width + ' '+ this.setSize.img_height});\n//\n                this.isEnd = false\n\n                setTimeout(() => {\n                    this.transitionWidth = ''\n                    this.transitionLeft = ''\n                    this.text = this.explain\n                }, 300)\n            },\n\n            //获取left值\n            getLeft: function (node) {\n                let leftValue = 0;\n                while (node) {\n                    leftValue += node.offsetLeft;\n                    node = node.offsetParent;\n                }\n                let finalvalue = leftValue;\n                return finalvalue;\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>\n"]}]}